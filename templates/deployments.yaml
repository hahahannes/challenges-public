apiVersion: apps/v1
kind: Deployment
metadata:
  name: challenges-frontend
  labels:
    app: challenges-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: challenges-frontend
  template:
    metadata:
      labels:
        app: challenges-frontend
    spec:
      containers:
      - image:  "{{ .Values.frontend.repository }}/{{ .Values.frontend.image }}:{{ .Values.frontend.tag }}"
        imagePullPolicy: {{ .Values.frontend.pullPolicy }}
        name: frontend
        env:
          - name: API_BASE_URL
            value: "{{ .Values.frontend.apiBaseUrl }}"
          - name: SSO_CLIENT_ID
            value: "{{ .Values.frontend.sso.clientId }}"
          - name: SSO_ISSUER
            value: "{{ .Values.frontend.sso.issuer }}"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: challenges-frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: challenges-backend
  labels:
    app: challenges-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: challenges-backend
  template:
    metadata:
      labels:
        app: challenges-backend
    spec:
      containers:
        - image:  "{{ .Values.backend.repository }}/{{ .Values.backend.image }}:{{ .Values.backend.tag }}"
          name: backend
          imagePullPolicy: {{ .Values.backend.pullPolicy }}
          ports:
            - containerPort: 80
          env:
              - name: KUBEFLOW_URL
                value: "{{ .Values.backend.kubeflow.url }}"
              - name: EXPERIMENT_ID
                value: "{{ .Values.backend.kubeflow.experimentId }}"
              - name: DEBUG
                value:  "{{ .Values.backend.debug }}"
              - name: PUBLIC_KEYS_CERN_SSO_URL
                value: "{{ .Values.backend.urlPublicKeysSSO }}"
              - name: AUDIENCE_CERN_SSO
                value: <path:kv/data/kubernetes/services/challenges/cern/sso#audience#2>
              - name: DATABASE_URL
                value: <path:kv/data/kubernetes/services/challenges/cern/db#connection_url#1>
              - name: KF_PIPELINES_SA_TOKEN_PATH
                value: /var/run/secrets/kubeflow/pipelines/token
          volumeMounts:
            - mountPath: /var/run/secrets/kubeflow/pipelines
              name: volume-kf-pipeline-token
              readOnly: true
          ports:
            - containerPort: 80
      volumes:
        - name: volume-kf-pipeline-token
          projected:
            sources:
              - serviceAccountToken:
                  path: token
                  expirationSeconds: 7200
                  ## defined by the `TOKEN_REVIEW_AUDIENCE` environment variable on the `ml-pipeline` deployment
                  audience: pipelines.kubeflow.org   
---
apiVersion: v1
kind: Service
metadata:
  name: backend-svc
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: challenges-backend